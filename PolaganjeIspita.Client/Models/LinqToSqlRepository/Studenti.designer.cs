#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolaganjeIspita.Client.Models.LinqToSqlRepository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Studenti")]
	public partial class StudentiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertSmer(Smer instance);
    partial void UpdateSmer(Smer instance);
    partial void DeleteSmer(Smer instance);
    partial void InsertPrijava(Prijava instance);
    partial void UpdatePrijava(Prijava instance);
    partial void DeletePrijava(Prijava instance);
    partial void InsertPredmet(Predmet instance);
    partial void UpdatePredmet(Predmet instance);
    partial void DeletePredmet(Predmet instance);
    #endregion
		
		public StudentiDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["StudentiConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StudentiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Smer> Smers
		{
			get
			{
				return this.GetTable<Smer>();
			}
		}
		
		public System.Data.Linq.Table<Prijava> Prijavas
		{
			get
			{
				return this.GetTable<Prijava>();
			}
		}
		
		public System.Data.Linq.Table<Predmet> Predmets
		{
			get
			{
				return this.GetTable<Predmet>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentID;
		
		private string _Ime;
		
		private string _Prezime;
		
		private short _GodinaUpisa;
		
		private string _DatumRodjenja;
		
		private float _Skolarina;
		
		private System.Nullable<float> _Prosek;
		
		private int _SmerID;
		
		private EntitySet<Prijava> _Prijavas;
		
		private EntityRef<Smer> _Smer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnGodinaUpisaChanging(short value);
    partial void OnGodinaUpisaChanged();
    partial void OnDatumRodjenjaChanging(string value);
    partial void OnDatumRodjenjaChanged();
    partial void OnSkolarinaChanging(float value);
    partial void OnSkolarinaChanged();
    partial void OnProsekChanging(System.Nullable<float> value);
    partial void OnProsekChanged();
    partial void OnSmerIDChanging(int value);
    partial void OnSmerIDChanged();
    #endregion
		
		public Student()
		{
			this._Prijavas = new EntitySet<Prijava>(new Action<Prijava>(this.attach_Prijavas), new Action<Prijava>(this.detach_Prijavas));
			this._Smer = default(EntityRef<Smer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GodinaUpisa", DbType="SmallInt NOT NULL")]
		public short GodinaUpisa
		{
			get
			{
				return this._GodinaUpisa;
			}
			set
			{
				if ((this._GodinaUpisa != value))
				{
					this.OnGodinaUpisaChanging(value);
					this.SendPropertyChanging();
					this._GodinaUpisa = value;
					this.SendPropertyChanged("GodinaUpisa");
					this.OnGodinaUpisaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumRodjenja", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DatumRodjenja
		{
			get
			{
				return this._DatumRodjenja;
			}
			set
			{
				if ((this._DatumRodjenja != value))
				{
					this.OnDatumRodjenjaChanging(value);
					this.SendPropertyChanging();
					this._DatumRodjenja = value;
					this.SendPropertyChanged("DatumRodjenja");
					this.OnDatumRodjenjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skolarina", DbType="Real NOT NULL")]
		public float Skolarina
		{
			get
			{
				return this._Skolarina;
			}
			set
			{
				if ((this._Skolarina != value))
				{
					this.OnSkolarinaChanging(value);
					this.SendPropertyChanging();
					this._Skolarina = value;
					this.SendPropertyChanged("Skolarina");
					this.OnSkolarinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prosek", DbType="Real")]
		public System.Nullable<float> Prosek
		{
			get
			{
				return this._Prosek;
			}
			set
			{
				if ((this._Prosek != value))
				{
					this.OnProsekChanging(value);
					this.SendPropertyChanging();
					this._Prosek = value;
					this.SendPropertyChanged("Prosek");
					this.OnProsekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmerID", DbType="Int NOT NULL")]
		public int SmerID
		{
			get
			{
				return this._SmerID;
			}
			set
			{
				if ((this._SmerID != value))
				{
					if (this._Smer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmerIDChanging(value);
					this.SendPropertyChanging();
					this._SmerID = value;
					this.SendPropertyChanged("SmerID");
					this.OnSmerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Prijava", Storage="_Prijavas", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<Prijava> Prijavas
		{
			get
			{
				return this._Prijavas;
			}
			set
			{
				this._Prijavas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Smer_Student", Storage="_Smer", ThisKey="SmerID", OtherKey="SmerID", IsForeignKey=true)]
		public Smer Smer
		{
			get
			{
				return this._Smer.Entity;
			}
			set
			{
				Smer previousValue = this._Smer.Entity;
				if (((previousValue != value) 
							|| (this._Smer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Smer.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Smer.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._SmerID = value.SmerID;
					}
					else
					{
						this._SmerID = default(int);
					}
					this.SendPropertyChanged("Smer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prijavas(Prijava entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Prijavas(Prijava entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Smer")]
	public partial class Smer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SmerID;
		
		private string _Naziv;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmerIDChanging(int value);
    partial void OnSmerIDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public Smer()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SmerID
		{
			get
			{
				return this._SmerID;
			}
			set
			{
				if ((this._SmerID != value))
				{
					this.OnSmerIDChanging(value);
					this.SendPropertyChanging();
					this._SmerID = value;
					this.SendPropertyChanged("SmerID");
					this.OnSmerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NChar(40) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Smer_Student", Storage="_Students", ThisKey="SmerID", OtherKey="SmerID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Smer = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Smer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prijava")]
	public partial class Prijava : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PredmetID;
		
		private int _StudentID;
		
		private int _Ocena;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Predmet> _Predmet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPredmetIDChanging(int value);
    partial void OnPredmetIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnOcenaChanging(int value);
    partial void OnOcenaChanged();
    #endregion
		
		public Prijava()
		{
			this._Student = default(EntityRef<Student>);
			this._Predmet = default(EntityRef<Predmet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredmetID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PredmetID
		{
			get
			{
				return this._PredmetID;
			}
			set
			{
				if ((this._PredmetID != value))
				{
					if (this._Predmet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPredmetIDChanging(value);
					this.SendPropertyChanging();
					this._PredmetID = value;
					this.SendPropertyChanged("PredmetID");
					this.OnPredmetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocena", DbType="Int NOT NULL")]
		public int Ocena
		{
			get
			{
				return this._Ocena;
			}
			set
			{
				if ((this._Ocena != value))
				{
					this.OnOcenaChanging(value);
					this.SendPropertyChanging();
					this._Ocena = value;
					this.SendPropertyChanged("Ocena");
					this.OnOcenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Prijava", Storage="_Student", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Prijavas.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Prijavas.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predmet_Prijava", Storage="_Predmet", ThisKey="PredmetID", OtherKey="PredmetID", IsForeignKey=true)]
		public Predmet Predmet
		{
			get
			{
				return this._Predmet.Entity;
			}
			set
			{
				Predmet previousValue = this._Predmet.Entity;
				if (((previousValue != value) 
							|| (this._Predmet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Predmet.Entity = null;
						previousValue.Prijavas.Remove(this);
					}
					this._Predmet.Entity = value;
					if ((value != null))
					{
						value.Prijavas.Add(this);
						this._PredmetID = value.PredmetID;
					}
					else
					{
						this._PredmetID = default(int);
					}
					this.SendPropertyChanged("Predmet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Predmet")]
	public partial class Predmet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PredmetID;
		
		private string _Naziv;
		
		private string _Profesor;
		
		private EntitySet<Prijava> _Prijavas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPredmetIDChanging(int value);
    partial void OnPredmetIDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnProfesorChanging(string value);
    partial void OnProfesorChanged();
    #endregion
		
		public Predmet()
		{
			this._Prijavas = new EntitySet<Prijava>(new Action<Prijava>(this.attach_Prijavas), new Action<Prijava>(this.detach_Prijavas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredmetID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PredmetID
		{
			get
			{
				return this._PredmetID;
			}
			set
			{
				if ((this._PredmetID != value))
				{
					this.OnPredmetIDChanging(value);
					this.SendPropertyChanging();
					this._PredmetID = value;
					this.SendPropertyChanged("PredmetID");
					this.OnPredmetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profesor", DbType="NVarChar(30)")]
		public string Profesor
		{
			get
			{
				return this._Profesor;
			}
			set
			{
				if ((this._Profesor != value))
				{
					this.OnProfesorChanging(value);
					this.SendPropertyChanging();
					this._Profesor = value;
					this.SendPropertyChanged("Profesor");
					this.OnProfesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predmet_Prijava", Storage="_Prijavas", ThisKey="PredmetID", OtherKey="PredmetID")]
		public EntitySet<Prijava> Prijavas
		{
			get
			{
				return this._Prijavas;
			}
			set
			{
				this._Prijavas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prijavas(Prijava entity)
		{
			this.SendPropertyChanging();
			entity.Predmet = this;
		}
		
		private void detach_Prijavas(Prijava entity)
		{
			this.SendPropertyChanging();
			entity.Predmet = null;
		}
	}
}
#pragma warning restore 1591
